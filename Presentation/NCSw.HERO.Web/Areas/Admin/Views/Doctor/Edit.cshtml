@using NCSw.HERO.Web.Areas.Admin.Models
@model DoctorModel

@{
    //page title
    ViewBag.Title = T("Hero.Admin.Doctors.EditDoctorDetails").Text;
    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("Doctors");
}

<style>
    label {
        font-weight: 300;
    }
</style>

<form asp-controller="Doctor" asp-action="Edit" method="post">
    <div class="content-header clearfix">
        <h1 class="pull-left">
            @T("Hero.Admin.Doctors.EditDoctorDetails") - @Model.FullName
            <small>
                <i class="fa fa-arrow-circle-left"></i>
                <a asp-action="List">@T("Hero.Admin.Doctors.BackToList")</a>
            </small>
        </h1>
        <div class="pull-right">
            <button type="submit" name="save" class="btn bg-blue">
                <i class="fa fa-floppy-o"></i>
                @T("Admin.Common.Save")
            </button>
            <button type="submit" name="save-continue" class="btn bg-blue">
                <i class="fa fa-floppy-o"></i>
                @T("Admin.Common.SaveContinue")
            </button>
            <span id="customer-delete" class="btn bg-red">
                <i class="fa fa-trash-o"></i>
                @T("Admin.Common.Delete")
            </span>
            @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.DoctorDetailsButtons, additionalData = Model })
        </div>
    </div>
    @*<div asp-validation-summary="All"></div>*@
    <input asp-for="Id" type="hidden" />

    <div class="content">
        <div class="form-horizontal">
            <div class="panel-group">
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div class="form-group">
                            <div class="col-md-2">
                                <nop-label asp-for="Code" />
                            </div>
                            <div class="col-md-9">
                                <nop-editor asp-for="Code" asp-required="true" />
                                <span asp-validation-for="Code"></span>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-2">
                                <nop-label asp-for="FullName" />
                            </div>
                            <div class="col-md-9">
                                <nop-editor asp-for="FullName" asp-required="true" />
                                <span asp-validation-for="FullName"></span>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-2">
                                <nop-label asp-for="BirthDay" />
                            </div>
                            <div class="col-md-9">
                                @Html.TextBoxFor(m => m.BirthDay, new { @id = "BirthDay", @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-2">
                                <nop-label asp-for="Gender" />
                            </div>
                            <div class="col-md-9">
                                <div class="raw">
                                    @Html.DropDownListFor(x => x.Gender, Model.AvailableGenders, new { @class = "form-control" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-2">
                                <nop-label asp-for="IdentityCard" />
                            </div>
                            <div class="col-md-9">
                                <nop-editor asp-for="IdentityCard" asp-required="true" />
                                <span asp-validation-for="IdentityCard"></span>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-2">
                                <nop-label asp-for="Email" />
                            </div>
                            <div class="col-md-9">
                                <nop-editor asp-for="Email" />
                                <span asp-validation-for="Email"></span>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-2">
                                <nop-label asp-for="PhoneNumber" />
                            </div>
                            <div class="col-md-9">
                                <nop-editor asp-for="PhoneNumber" asp-required="true" />
                                <span asp-validation-for="PhoneNumber"></span>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-2">
                                <nop-label asp-for="Address" />
                            </div>
                            <div class="col-md-9">
                                <nop-editor asp-for="Address" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>
<nop-delete-confirmation asp-model-id="@Model.Id" asp-button-id="doctor-delete" />

<script>
    $(document).ready(function () {
        // Fields
        var frm = {
            el: '#doctor-form',
            $el: {},
            birthDay: {
                el: '#@Html.FieldIdFor(x => x.BirthDay)',
                $el: {},
                init: function () { }
            },
            init: function () { }
        };
        var birthDay = frm.birthDay;

        // Methods
        $.getCurrentDateDefaultForr = function () {
            var today = new Date();
            var dd = today.getDate();
            var mm = today.getMonth() + 1; //January is 0!

            var yyyy = today.getFullYear();
            if (dd < 10) {
                dd = '0' + dd;
            }
            if (mm < 10) {
                mm = '0' + mm;
            }
            today = dd + '/' + mm + '/' + yyyy;
            return today;
        }

        $.getCurrentDate = function () {
            var today = new Date();
            var dd = today.getDate();
            var mm = today.getMonth() + 1; //January is 0!

            var yyyy = today.getFullYear();
            if (dd < 10) {
                dd = '0' + dd;
            }
            if (mm < 10) {
                mm = '0' + mm;
            }
            today = mm + '/' + dd + '/' + yyyy;
            return today;
        }

        // Init
        frm.init = function () {
            frm.$el = $(frm.birthDay);

            birthDay.init();
        }

        birthDay.init = function () {
            birthDay.$el = $(birthDay.el);

            var date = birthDay.$el.val().substr(0, 10);

            birthDay.$el.datetimepicker({
                format: "DD/MM/YYYY",
                locale: app.dateTime.locale(),
                maxDate: $.getCurrentDate(),
                defaultDate: $.getCurrentDate()
            }).on('dp.show', function () {
                if (!$(this).val()) {
                    return $(this).data('DateTimePicker').defaultDate($.getCurrentDateDefaultForr());
                }
            });

            birthDay.$el.val(date);
        }

        // Events


        // Startup
        $(function () {
            frm.init();
        });

        // Templates


        // Helpers
    });
</script>
